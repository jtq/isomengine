{
  "_args": [
    [
      "@jtq/object-walker@git+https://github.com/jtq/object-walker.git",
      "C:\\Users\\james\\Documents\\GitHub\\isomengine\\node_modules\\@jtq\\tween"
    ]
  ],
  "_from": "git+https://github.com/jtq/object-walker.git",
  "_id": "@jtq/object-walker@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/@jtq/object-walker",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/jtq/object-walker/master/package.json",
      "gitUrl": "git://github.com/jtq/object-walker.git",
      "httpsUrl": "git+https://github.com/jtq/object-walker.git",
      "shortcut": "github:jtq/object-walker",
      "ssh": "git@github.com:jtq/object-walker.git",
      "sshUrl": "git+ssh://git@github.com/jtq/object-walker.git",
      "type": "github"
    },
    "name": "@jtq/object-walker",
    "raw": "@jtq/object-walker@git+https://github.com/jtq/object-walker.git",
    "rawSpec": "git+https://github.com/jtq/object-walker.git",
    "scope": "@jtq",
    "spec": "git+https://github.com/jtq/object-walker.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/@jtq/tween"
  ],
  "_resolved": "git+https://github.com/jtq/object-walker.git#8d3dd556ca3e03c6439f6f91ea76411760465daa",
  "_shasum": "74c9fbebfb3e453eb26cc01be69aa6c4c10b12dc",
  "_shrinkwrap": null,
  "_spec": "@jtq/object-walker@git+https://github.com/jtq/object-walker.git",
  "_where": "C:\\Users\\james\\Documents\\GitHub\\isomengine\\node_modules\\@jtq\\tween",
  "author": {
    "name": "James Palmer"
  },
  "bugs": {
    "url": "https://github.com/jtq/object-walker/issues"
  },
  "dependencies": {},
  "description": "Simple object walker with value callbacks",
  "devDependencies": {},
  "gitHead": "8d3dd556ca3e03c6439f6f91ea76411760465daa",
  "homepage": "https://github.com/jtq/object-walker#readme",
  "keywords": [
    "jtq",
    "object",
    "walker"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "@jtq/object-walker",
  "optionalDependencies": {},
  "readme": "# Object Walker\r\n\r\nSimple object walker with a per-value callback.\r\n\r\n## Basic example\r\n\r\nWalk an object tree and spit out all simple values and their paths.\r\n\r\n    var walker = require('object-walker');\r\n\r\n    var obj = {\r\n\t\ta: 0,\r\n\t\tb: 0xFF0000,\r\n\t\tc: -10.1,\r\n\t\td: {\r\n\t\t\ta: 10\r\n\t\t}\r\n\t};\r\n\r\n    walker.walk(obj, function(val, path) {\r\n      console.log(path, val);\r\n    });\r\n\r\n## More complex example: tweening system\r\n\r\nDefine an `original` object with properties and a `target` object with target values for some or all of the original object's properties.  Then define a \"tweening\" function that will calculate the values of the object at any arbitrary point along the spectrum from `original` to `target`.\r\n\r\n    var walker = require('object-walker');\r\n\r\n    var from = {\r\n\t\ttop: 10,\r\n\t\tleft: 25,\r\n\t\tscale: 1,\r\n\t\trotation: 0\r\n\t};\r\n\r\n\tvar to = {\r\n\t\ttop: 100,\r\n\t\tleft: 0,\r\n\t\tscale: 1.5,\r\n\t\trotation: 90\r\n\t};\r\n\r\n\t// Given a \"from\" object, a \"to\" object and a \"progress\" parameter (0 -> 1), calculate the values of the \"from\" object's properties at that point\r\n\tfunction tween(from, to, progress) {\r\n\r\n\t\tvar result = JSON.parse(JSON.stringify(from));\t// Quick hacky object deep-clone\r\n\r\n\t\twalker.walk(from, function(val, path) {\r\n\t\t\tvar diff = walker.get(to, path) - walker.get(from, path);\r\n\t\t\tvar newval = walker.get(from, path) + (diff * progress);\r\n\t\t\twalker.set(result, path, newval);\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconsole.log(\"start\", from);\r\n\tfor(var i=1; i<=10; i++) {\r\n\t\tconsole.log(i, tween(from, to, i/10));\r\n\t}",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jtq/object-walker.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.0"
}
